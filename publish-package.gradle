apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'distribution'


tasks.register('androidJavadoc', Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }

    exclude '**/R.html', '**/R.*.html', '**/index.html'
    options.encoding 'utf-8'
    options {
        addStringOption 'docencoding', 'utf-8'
        addStringOption 'charset', 'utf-8'
        links 'https://docs.oracle.com/javase/7/docs/api/'
        links 'https://d.android.com/reference'
        links 'https://developer.android.com/reference/androidx/'
    }
}


tasks.register('androidJavadocJar', Jar) {
    dependsOn androidJavadoc
    archiveClassifier.set('javadoc')
    from androidJavadoc.destinationDir

    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

tasks.register('javaSourcesJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs

    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {

                from components.release

                //artifact androidJavadocJar
                //artifact javaSourcesJar

                groupId 'io.github.allefsousa.polaris'
                version '1.1.1'
                pom {
                    name = 'Polaris Design System'
                    description = 'A Design System library for Android'
                    url = 'https://github.com/digitalHorizonsCo/Polaris-Design-System'
                    licenses {
                        license {
                            name = ''
                            url = ''
                        }
                    }
                    scm {
                        connection = 'scm:git@github.com:digitalHorizonsCo/Polaris-Design-System.git'
                        url = 'https://github.com/digitalHorizonsCo/Polaris-Design-System'
                    }
                    developers {
                        developer {
                            id = POM_DEVELOPER_ID
                            name = POM_DEVELOPER_NAME
                            email = POM_DEVELOPER_EMAIL
                        }
                    }
                }
            }
            tasks.named("generateMetadataFileForReleasePublication").configure { dependsOn("javaSourcesJar") }

        }
        repositories {
            maven {
                name = "SonatypeSnapshot"

                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//                url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }

            maven {
                name = "sonatype"

                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
    tasks.distZip
    tasks.distTar
}

distributions {
    main {
        contents {
            from { tasks.sourcesJar.archivePath }
        }
    }
}

signing {
    sign publishing.publications
}